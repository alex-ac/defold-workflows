on:
  workflow_call:
    inputs:
      project_path:
        description: Path to the project in the repository.
        type: string
        default: .
      defold_version:
        type: string
        description: The engine hash or release channel to download.
        default: stable
      build_server:
        type: string
        description: The cloud build server to use.
        required: false
      settings:
        type: string
        description: Comma-separated list of settings files.
        required: false
      test_collection:
        type: string
        required: false
        description: Collection to use as main one in tests.

      bundle_x86_64_linux:
        type: boolean
        default: ${{ true }}
        description: Bundle for x86_64-linux (Linux)
      bundle_x86_64_win:
        type: boolean
        default: ${{ true }}
        description: Bundle for x86_64-win32 (Windows).
      bundle_x86_win:
        type: boolean
        default: ${{ true }}
        description: Bundle for x86-win32 (Legacy Windows).
      bundle_x86_64_mac:
        type: boolean
        default: ${{ true }}
        description: Bundle for x86_64-darwin (MacOS).
      bundle_arm64_ios:
        type: boolean
        default: ${{ true }}
        description: Bundle for x86_64-darwin (iOS).
      bundle_armv7_android:
        type: boolean
        default: ${{ true }}
        description: Bundle for armv7-android (Legacy Android).
      bundle_arm64_android:
        type: boolean
        default: ${{ true }}
        description: Bundle for arm64-android (Android).
      bundle_wasm_web:
        type: boolean
        default: ${{ true }}
        description: Bundle for wasm-web (WebAssembly).
      bundle_js_web:
        type: boolean
        default: ${{ false }}
        description: Bundle for js-web (JavaScript).

    secrets:
      email:
        required: false
        description: Email for cloud-builder.
      auth:
        required: false
        description: Auth token for cloud-builder.
      private_key_base64:
        required: false
        descirption: |
          Base64-encoded contents of der file of private key for signing game
          manifest.
      public_key_base64:
        required: false
        descirption: |
          Base64-encoded contents of der file of public key for signing game
          manifest.

jobs:
  setup_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setup_matrix.outputs.matrix }}
    steps:
    - uses: ./actions/setup_matrix
      id: setup_matrix
      with:
        bundle_x86_64_linux: ${{ inputs.bundle_x86_64_linux }}
        bundle_x86_64_win: ${{ inputs.bundle_x86_64_win }}
        bundle_x86_win: ${{ inputs.bundle_x86_win }}
        bundle_x86_64_mac: ${{ inputs.bundle_x86_64_mac }}
        bundle_arm64_ios: ${{ inputs.bundle_arm64_ios }}
        bundle_armv7_android: ${{ inputs.bundle_armv7_android }}
        bundle_arm64_android: ${{ inputs.bundle_arm64_android }}
        bundle_wasm_web: ${{ inputs.bundle_wasm_web }}
        bundle_js_web: ${{ inputs.bundle_js_web }}
  build:
    needs: setup_matrix
    strategy:
      matrix: ${{ fromJSON(needs.setup_matrix.outputs.matrix) }}

    runs-on: ${{ matrix.host_os }}
    steps:
      # Checkout, setup python, java & defold.
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
    - uses: alex-ac/defold-workflows/actions/setup_defold@master
      id: setup_defold
      with:
        version: ${{ inputs.defold_version }}
        platform: ${{ matrix.platform }}

      # Download all dependencies.
    - uses: alex-ac/defold-workflows/actions/resolve_dependencies@master
      if: inputs.test_collection && matrix.supports_tests
      timeout-minutes: 5
      with:
        project_path: ${{ inputs.project_path }}
        output: ./build
        settings: ${{ inputs.settings }}

      # Build for testing.
    - uses: alex-ac/defold-workflows/actions/build@master
      if: inputs.test_collection && matrix.supports_tests
      timeout-minutes: 5
      with:
        project_path: ${{ inputs.project_path }}
        output: ./build
        settings: ${{ inputs.settings }}
        keep_unused: ${{ true }}

      # Bundle for testing
    - uses: alex-ac/defold-workflows/actions/bundle@master
      if: inputs.test_collection && matrix.supports_tests
      timeout-minutes: 5
      with:
        project_path: ${{ inputs.project_path }}
        output: ./build
        build_server: ${{ inputs.build_server }}
        email: ${{ secrets.email }}
        auth: ${{ secrets.auth }}
        platform: ${{ matrix.platform }}
        architectures: ${{ matrix.architectures }}
        settings: ${{ inputs.settings }}

      # Run tests.
    - uses: alex-ac/defold-workflows/action/test@master
      if: inputs.test_collection && matrix.supports_tests
      timeout-minutes: 5
      with:
        platform: ${{ matrix.platform }}
        bundle_path: ./build/${{ matrix.platform }}
        test_collection: ${{ inputs.test_collection }}

    - runs: [ ! -e ./build ] || rm -rf ./build

      # Setup secrets.
    - uses: alex-ac/defold-workflows/actions/setup_secret@master
      id: setup_private_key
      with:
        base64_data: ${{ secrets.private_key_base64 }}
        path: ./manifest.private.der
    - uses: alex-ac/defold-workflows/actions/setup_secret@master
      id: setup_public_key
      with:
        base64_data: ${{ secrets.public_key_base64 }}
        path: ./manifest.public.der

      # Download all dependencies.
    - uses: alex-ac/defold-workflows/actions/resolve_dependencies@master
      timeout-minutes: 5
      with:
        project_path: ${{ inputs.project_path }}
        output: ./build
        settings: ${{ inputs.settings }}

      # Build game archive.
    - uses: alex-ac/defold-workflows/actions/build@master
      timeout-minutes: 5
      with:
        project_path: ${{ inputs.project_path }}
        output: ./build
        private_key_path: ${{ steps.setup_private_key.outputs.path }}
        public_key_path: ${{ steps.setup_public_key.outputs.path }}
        settings: ${{ inputs.settings }}

      # Bundle game for the selected platform.
    - uses: alex-ac/defold-workflows/actions/bundle@master
      timeout-minutes: 5
      with:
        project_path: ${{ inputs.project_path }}
        output: ./build
        build_server: ${{ inputs.build_server }}
        email: ${{ secrets.email }}
        auth: ${{ secrets.auth }}
        private_key_path: ${{ steps.setup_private_key.outputs.path }}
        public_key_path: ${{ steps.setup_public_key.outputs.path }}
        platform: ${{ matrix.platform }}
        architectures: ${{ matrix.architectures }}
        archive_name_platform: ${{ matrix.archive_name_platform }}
        bundle_type: ${{ matrix.bundle_type }}
        settings: ${{ inputs.settings }}

      # Detect project name (it is used in the artifact name).
    - id: detect_project_name
      uses: alex-ac/defold-workflows/actions/detect_project_name@master
      with:
        project_path: ${{ inputs.project_path }}
        settings: ${{ inputs.settings }}

      # Package the artifact.
    - uses: alex-ac/defold-workflows/actions/package@master
      with:
        input: ./build/${{ matrix.platform }}
        project_name: ${{ env.DEFOLD_PROJECT_NAME }}
        bundle_type: ${{ matrix.bundle_type }}
        output_dir: ./build
        output_name: ${{ env.DEFOLD_PROJECT_NAME }}-${{ matrix.archive_name_platform }}

      # Upload artifact.
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ env.artifact_name }}
        path: ${{ env.artifact_path }}
