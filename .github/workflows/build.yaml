on:
  workflow_call:
    inputs:
      project_path:
        description: Path to the project in the repository.
        type: string
        default: .
      defold_version:
        type: string
        description: The engine hash or release channel to download.
        default: stable

jobs:
  build:
    strategy:
      matrix:
        host_os: [ 'ubuntu-latest' ]
        target_os: [ 'linux' ]
        target_arch: [ 'x86_64' ]
        architectures: [ 'x86_64-linux' ]
        bundle_type: [ 'tgz' ]

        include:
        - host_os: ubuntu-latest
          target_os: win32
          target_arch: x86_64
          architectures: x86_64-win32
          bundle_type: zip
        - host_os: ubuntu-latest
          target_os: win32
          target_arch: x86
          architectures: x86-win32
          bundle_type: zip
        - host_os: ubuntu-latest
          target_os: android
          target_arch: armv7
          architectures: arm64-android,armv7-android
          bundle_type: apk
        - host_os: ubuntu-latest
          target_os: web
          target_arch: js
          architectures: wasm-web
          bundle_type: tgz
        - host_os: macos-latest
          target_os: darwin
          target_arch: x86_64
          architectures: x86_64-darwin
          bundle_type: dmg
        - host_os: macos-latest
          target_os: darwin
          target_arch: arm64
          architectures: arm64-darwin
          bundle_type: ipa
    runs-on: ${{ matrix.host_os }}
    steps:
    - uses: actions/checkout@v3
      with:
        repository: alex-ac/defold-workflows
        ref: v1.0.0

    - uses: actions/checkout@v3
      with:
        path: ./src/

    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - uses: dapetcu21/setup-defold@v3.0.2
      with:
        sha1: ${{ inputs.defold_version }}

    - id: detect_project_name
      uses: ./actions/detect_project_name
      with:
        project_path: ./src/${{ inputs.project_path }}

    - uses: ./actions/bob
      timeout-minutes: 5
      with:
        input: ./src/${{ inputs.project_path }}
        output: ./build/default
        action: resolve

    - uses: ./actions/bob
      timeout-minutes: 5
      with:
        input: ./src/${{ inputs.project_path }}
        output: ./build/default
        action: build

    - uses: ./actions/bob
      timeout-minutes: 5
      with:
        input: ./src/${{ inputs.project_path }}
        output: ./build/default
        bundle_output: ./build/${{ matrix.target_os }}
        platform: ${{ matrix.target_arch }}-${{ matrix.target_os }}
        architectures: ${{ matrix.architectures }}
        action: bundle

    - uses: ./actions/package_tgz
      if: ${{ matrix.bundle_type == 'tgz' }}
      with:
        input: ./build/${{ matrix.target_os }}
        output: ./build/${{ env.DEFOLD_PROJECT_NAME }}-${{ matrix.target_arch }}-${{ matrix.target_os }}.tgz

    - uses: ./actions/package_zip
      if: ${{ matrix.bundle_type == 'zip' }}
      with:
        input: ./build/${{ matrix.target_os }}
        output: ./build/${{ env.DEFOLD_PROJECT_NAME }}-${{ matrix.target_arch }}-${{ matrix.target_os }}.zip

    - uses: ./actions/package_dmg
      if: ${{ matrix.bundle_type == 'dmg' }}
      with:
        input: ./build/${{ matrix.target_os }}
        output: ./build/${{ env.DEFOLD_PROJECT_NAME}}-${{ matrix.target_arch }}-${{ matrix.target_os }}.dmg

    - uses: actions/upload-artifact@v3
      if: ${{ matrix.bundle_type == 'apk' }}
      with:
        name: ${{ env.DEFOLD_PROJECT_NAME }}-${{ matrix.target_arch }}-${{ matrix.target_os }}.apk
        path: ./build/${{ matrix.target_os }}/${{ env.DEFOLD_PROJECT_NAME}}/${{ env.DEFOLD_PROJECT_NAME }}.apk

    - uses: actions/upload-artifact@v3
      if: ${{ matrix.bundle_type == 'ipa' }}
      with:
        name: ${{ env.DEFOLD_PROJECT_NAME }}-${{ matrix.target_arch }}-${{ matrix.target_os }}.ipa
        path: ./build/${{ matrix.target_os }}/${{ env.DEFOLD_PROJECT_NAME}}.ipa
