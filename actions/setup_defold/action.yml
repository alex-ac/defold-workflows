name: Setup Defold
description: Download bob.jar and dmengine_headless.

inputs:
  version:
    default: stable
    description: |
      Version of the defold to setup. Acceptable values are
      `stable`, `beta`, `alpha` or sha1 revision.

outputs:
  bob:
    description: Path to the bob.jar.
    value: ${{ steps.setup_defold.outputs.bob }}

runs:
  using: composite
  steps:
  - shell: python
    id: setup_defold
    env:
      PYTHONPATH: ${{ github.action_path }}/..
      INPUTS: ${{ toJSON(inputs) }}
    run: |
      import dataclasses
      import json
      import pathlib
      import urllib.request

      import toolkit

      @toolkit.inputs
      class Inputs:
          version: str

      inputs = Inputs.load()

      @dataclasses.dataclass(frozen=True)
      class VersionInfo:
          version: str
          sha1: str

          @property
          def bob_url(self) -> str:
              return f'https://d.defold.com/archive/{self.sha1}/bob/bob.jar'

      def resolve(version: str) -> VersionInfo:
          url = f'https://d.defold.com/{version}/info.json'
          with urllib.request.urlopen(url) as response:
              return VersionInfo(**json.load(response))

      version_info = resolve(inputs.version)
      toolkit.debug('version_info')

      install_path = pathlib.Path('.defold')
      if not install_path.exists():
          install_path.mkdir(parents=True)

      bob_path = install_path / 'bob.jar'
      urllib.request.urlretrieve(version_info.bob_url, bob_path)

      toolkit.set_output('bob', bob_path.resolve())
      toolkit.set_env('BOB', bob_path.resolve())

      toolkit.add_to_path(install_path)
