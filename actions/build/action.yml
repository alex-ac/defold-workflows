name: Build
description: |
  End-to-end build of the defold project.
inputs:
  project_path:
    default: .
    description: Path to the defold project.
  output:
    default: build/defold
    description: Path for the build output.
  args:
    type: string
    description: Extra arguments for bob.
  platform:
    type: string
    description: Platform to bundle for.
  architectures:
    type: string
    description: Comma-separated list of architectures to bundle for.
  build_server:
    type: string
    description: Address of the cloud build server.
    required: false
  email:
    type: string
    required: false
    description: Email for cloud-builder.
  auth:
    type: string
    required: false
    description: Auth for cloud-builder.

runs:
  using: composite
  steps:
  - uses: actions/setup-java@v3
    with:
      distribution: 'temurin'
      java-version: '11'

  - uses: dapetcu21/setup-defold@v3.0.2
    with:
      sha1: ${{ inputs.defold_version }}

  - id: detect_project_name
    uses: ./actions/detect_project_name
    with:
      project_path: ${{ inputs.project_path }}

  - uses: ./actions/bob
    with:
      input: .${{ inputs.project_path }}
      output: ${{ inputs.output }}/default
      build_server: ${{ inputs.build_server }}
      email: ${{ secrets.email }}
      auth: ${{ secrets.auth }}
      action: resolve

  - uses: ./actions/bob
    with:
      input: ${{ inputs.project_path }}
      output: ${{ inputs.output }}/default
      build_server: ${{ inputs.build_server }}
      email: ${{ secrets.email }}
      auth: ${{ secrets.auth }}
      action: build

  - uses: ./actions/bob
    with:
      input: ${{ inputs.project_path }}
      output: ${{ inputs.output }}/default
      build_server: ${{ inputs.build_server }}
      bundle_output: ${{ inputs.output }}/${{ inputs.platform }}
      platform: ${{ inputs.platform }}
      architectures: ${{ inputs.architectures }}
      email: ${{ inputs.email }}
      auth: ${{ inputs.auth }}
      action: bundle

  - uses: ./actions/package_tgz
    if: inputs.bundle_type == 'tgz'
    with:
      input: ${{ inputs.output }}/${{ inputs.platform }}
      output: ${{ inputs.output }}/${{ env.DEFOLD_PROJECT_NAME }}-${{ inputs.platform }}.${{ inputs.bundle_type }}

  - uses: ./actions/package_zip
    if: inputs.bundle_type == 'zip'
    with:
      input: ${{ inputs.output }}/${{ matrix.platform }}
      output: ${{ inputs.output }}//${{ env.DEFOLD_PROJECT_NAME }}-${{ inputs.platform }}.${{ inputs.bundle_type }}

  - uses: ./actions/package_dmg
    if: inputs.bundle_type == 'dmg'
    with:
      input: ${{ inputs.output }}/${{ inputs.platform }}
      output: ${{ inputs.output }}/${{ env.DEFOLD_PROJECT_NAME}}-${{ inputs.platform }}.${{ inputs.bundle_type }}

  - uses: actions/upload-artifact@v3
    if: inputs.bundle_type == 'apk'
    with:
      name: ${{ env.DEFOLD_PROJECT_NAME }}-${{ inputs.platform }}.${{ inputs.bundle_type }}
      path: ${{ inputs.output }}/${{ inputs.platform }}/${{ env.DEFOLD_PROJECT_NAME}}/${{ env.DEFOLD_PROJECT_NAME }}.${{ inputs.bundle_type }}

  - uses: actions/upload-artifact@v3
    if: inputs.bundle_type == 'ipa'
    with:
      name: ${{ env.DEFOLD_PROJECT_NAME }}-${{ inputs.platform }}.${{ inputs.bundle_type }}
      path: ${{ inputs.output }}/${{ inputs.platform }}/${{ env.DEFOLD_PROJECT_NAME}}.${{ inputs.bundle }}
