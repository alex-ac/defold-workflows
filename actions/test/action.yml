name: Test
inputs:
  bundle_path:
    default: .
    description: Path to the built bundle.
  test_collection:
    required: true
    description: Name of the main collection used for tests.
  project_name:
    required: true
    description: Project name from game.project (it's used in file names).'
  platform:
    required: true
    description: The platform we're testing.

runs:
  using: composite
  steps:
  - shell: python
    env:
      PYTHONPATH: ${{ github.action_path }}/..
      INPUTS: ${{ toJSON(inputs) }}
    run: |
      import pathlib
      import platform
      import sys

      import toolkit

      @toolkit.inputs
      class Inputs:
          bundle_path: pathlib.Path
          platform: str
          project_name: str
          test_collection: pathlib.Path

      inputs = Inputs.load()

      bundle_path = inputs.bundle_path
      project_name = inputs.project_name
      project_name_filtered = project_name.replace('-', '')

      supported_platforms = {
          'Darwin': {
              'x86_64-darwin':
                  (bundle_path / project_name).with_suffix('.app') /
                  'Contents' / 'MacOS' / project_name_filtered,
          },
          'Linux': {
              'x86_64-linux':
                  (bundle_path / project_name / project_name_filtered)
                  .with_suffix('.x86_64'),
          },
          'Windows': {
              'x86_64-win32':
                  (bundle_path / project_name / project_name_filtered)
                  .with_suffix('.exe'),
              'x86-win32':
                  (bundle_path / project_name / project_name_filtered)
                  .with_suffix('.exe'),
          },
      }[platform.system()]

      if inputs.platform not in supported_platforms:
          toolkit.error(
              'Unsupported platform.'
              f'Can\'t run tests on bundle built for {inputs.platform} on '
              f'{platform.system()}.')
          sys.exit(1)

      executable_path = supported_platforms[inputs.platform]

      sys.exit(toolkit.run(
          [
              executable_path,
              f'--config=bootstrap.main_collection={inputs.test_collection}',
          ],
      ))
