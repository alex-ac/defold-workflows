name: Run bob to perform actions on the project.
inputs:
  input:
    default: .
    description: Path to the defold project.
  output:
    default: build/defold
    description: Path for the build output.
  args:
    type: string
    description: Free-form args for bob.
  action:
    required: true
    description: Action to run.
  platform:
    type: string
    description: Platform to bundle for.
  architectures:
    type: string
    description: Comma-separated list of architectures to bundle for.
  bundle_output:
    type: string
    description: Path for the bundle output.
  build_server:
    type: string
    description: Address of the cloud build server.
    required: false
  email:
    type: string
    required: false
    description: Email for cloud-builder.
  auth:
    type: string
    required: false
    description: Auth for cloud-builder.
  settings:
    type: string
    required: false
    description: Comma-separated list of settings files to merge into project.

runs:
  using: composite
  steps:
  - shell: python
    env:
      PYTHONPATH: ${{ github.action_path }}/..
    run: |
      import dataclasses
      import os
      import pathlib
      import shlex
      import subprocess
      import sys

      import toolkit

      @dataclasses.dataclass(frozen=True)
      class Inputs:
          input: str
          output: str
          args: str
          action: str
          platform: str
          architectures: str
          bundle_output: str
          build_server: str
          email: str
          auth: str
          settings: str


      inputs = toolkit.inputs_from_env(Inputs, os.environ)

      bob_command = [
          'java', '-jar', os.environ['BOB'],
          '--verbose',
          '--root', inputs.input,
      ]

      if inputs.args:
          bob_command += shlex.split(inputs.args)

      if inputs.build_server:
          bob_command += [
              '--build-server', inputs.build_server,
          ]

      if inputs.email or inputs.auth:
          if not inputs.email or not inputs.auth:
              toolkit.perror(
                  'Configuration Issue',
                  'Both `email` and `auth` should be provided at the same time.')

          bob_command += [
              '--email', inputs.email,
              '--auth', inputs.auth,
          ]

      if inputs.settings:
          BOB_ARGS += [
              '--settings', inputs.settings,
          ]

      if inputs.action == 'build':
          bob_command.append('--archive')
      elif inputs.action == 'bundle':
          bob_command += [
              '--bundle-output', inputs.bundle_output,
              '--platform', inputs.platform,
              '--architectures', inputs.architectures
          ]

      bob_command.append(inputs.action)

      sys.exit(subprocess.call(bob_command))
